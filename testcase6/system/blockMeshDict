
/*--------------------------------*- C++ -*----------------------------------*/

// File was generated by SwiftBlock, a Blender 3D addon.

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

deltaT          1;

writeInterval   1;



// ************************************************************************* //


geometry
{
   cylinder
   {
      type triSurfaceMesh;
      file "cylinder.stl";
   }
}
vertices
(
    (1.0 -1.0 -6.0)
    (-1.0 -1.0 -6.0)
    project (2.0 2.0 -6.0) (cylinder)
    (-1.0 1.0 -6.0)
    (1.0 1.0 -6.0)
    project (-2.0 -2.0 -6.0) (cylinder)
    project (-2.0 2.0 -6.0) (cylinder)
    project (2.0 -2.0 -6.0) (cylinder)
    project (-2.0 -2.0 6.0) (cylinder)
    (-1.0 -1.0 6.0)
    (-1.0 1.0 6.0)
    project (-2.0 2.0 6.0) (cylinder)
    (1.0 -1.0 6.0)
    (1.0 1.0 6.0)
    project (2.0 2.0 6.0) (cylinder)
    project (2.0 -2.0 6.0) (cylinder)
);
edges
(
    projectCurve 5 6 (cylinder)
    projectCurve 2 6 (cylinder)
    projectCurve 7 5 (cylinder)
    projectCurve 7 2 (cylinder)
    projectCurve 5 8 (cylinder)
    projectCurve 6 11 (cylinder)
    projectCurve 15 14 (cylinder)
    projectCurve 2 14 (cylinder)
    projectCurve 7 15 (cylinder)
    projectCurve 8 11 (cylinder)
    projectCurve 15 8 (cylinder)
    projectCurve 14 11 (cylinder)
);
faces
(
    project (6 5 8 11) cylinder
    project (5 7 15 8) cylinder
    project (2 6 11 14) cylinder
    project (7 2 14 15) cylinder
);
blocks
(
// block id 0 
hex (0 4 3 1 12 13 10 9)  (10 10 20) edgeGrading (
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
)
// block id 1 
hex (0 1 5 7 12 9 8 15)  (10 10 20) edgeGrading (
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
)
// block id 2 
hex (12 13 14 15 0 4 2 7)  (10 10 20) edgeGrading (
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
)
// block id 3 
hex (1 3 6 5 9 10 11 8)  (10 10 20) edgeGrading (
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
)
// block id 4 
hex (2 6 3 4 14 11 10 13)  (10 10 20) edgeGrading (
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 10 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
(
 (0 0 1) (1 20 1) (0 0 1) 
)
)
);

patches
(
     wall bottom
    (
        (0 4 2 7)
        (4 3 6 2)
        (0 7 5 1)
        (1 5 6 3)
        (3 4 0 1)
    )
     wall walls
    (
        (6 5 8 11)
        (5 7 15 8)
        (2 6 11 14)
        (7 2 14 15)
    )
     wall top
    (
        (10 9 12 13)
        (9 10 11 8)
        (12 9 8 15)
        (13 14 11 10)
        (12 15 14 13)
    )
);