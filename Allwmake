#!/bin/bash

cd "${0%/*}" || exit  # Run from the file location

# Stop at errors
set -e

# Check for OpenFOAM
if [[ -z "${WM_PROJECT}" ]]
then
    echo "Error: No OpenFOAM has been sourced. Stopping.."
    exit 1
fi

# Check for a supported OpenFOAM variant
if [[ "$WM_PROJECT" != "OpenFOAM" ]]; then
    echo "Sorry, \$WM_PROJECT=$WM_PROJECT is not currently supported! Stopping.."
    exit 1
fi

# Deduce the OpenFOAM fork/variant in use and initialize accordingly
if [[ "$WM_PROJECT_VERSION" == *"v"* ]]; then
    echo "Compiling openfoam.com variant"
    export VERSION_SPECIFIC_INC="-DOPENFOAM_COM"
    cp -f src/Make/options.com src/Make/options
else
    echo "Compiling openfoam.org variant"
    export VERSION_SPECIFIC_INC="-DOPENFOAM_ORG"
    cp -f src/Make/options.org src/Make/options
fi

# Warn if version numbers are not any of the supported ones
allowed_ver=("12" "v2412")
if ! [[ " ${allowed_ver[*]} " == *" $WM_PROJECT_VERSION "* ]]; then
    echo "Warning: Version $WM_PROJECT_VERSION is not supported. Continuing.."
fi

# Compile
echo "-----"
(cd src && wmake 2>&1 | tee log.Allwmake)
echo "-----"

# Check if the build succeeded
N_ERRORS_1=$(find . -name log.Allwmake | xargs grep " Error " | wc -l)
N_ERRORS_2=$(find . -name log.Allwmake | xargs grep " Stop." | wc -l)
if [[ $N_ERRORS_1 -gt 0 ]] || [[ $N_ERRORS_2 -gt 0 ]]
then
    echo "Errors were found in the following log files:"
    echo $(find . -name log.Allwmake | xargs grep -l " Error ")
    echo $(find . -name log.Allwmake | xargs grep -l " Stop.")
    echo "Compilation of smoothMesh FAILED!"
    exit 1
else
    echo "Looks like compilation of smoothMesh succeeded!"
fi
